{"version":3,"sources":["components/AddPlayerInput.js","components/PlayerListItem.js","components/PlayerList.js","containers/PlayerListApp.js","actions/PlayersActions.js","constants/ActionTypes.js","reducers/playerlist.js","containers/App.js","index.js"],"names":["AddPlayerInput","Component","render","type","autoFocus","className","classnames","styles","addPlayerInput","placeholder","value","this","state","name","onChange","handleChange","bind","onKeyDown","handleSubmit","constructor","props","context","super","e","setState","target","trim","which","addPlayer","PlayerListItem","playerListItem","playerInfos","team","position","playerActions","btnAction","onClick","starPlayer","id","starred","deletePlayer","connect","visible","playerlist","players","useState","current","setCurrent","data","setData","total","length","useEffect","console","log","slice","playerList","map","player","index","key","actions","showQuickJumper","defaultCurrent","pageSize","getCurrentList","todos","filter","t","PlayerListApp","handleShow","playerListApp","playersById","dispatch","initialState","action","item","find","reducer","combineReducers","reducers","store","createStore","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.40e1a262.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './AddPlayerInput.css';\n\nclass AddPlayerInput extends Component {\n  render() {\n    return (\n      <input\n        type=\"text\"\n        autoFocus={true}\n        className={classnames('form-control', styles.addPlayerInput)}\n        placeholder=\"Type the name of a player\"\n        value={this.state.name}\n        onChange={this.handleChange.bind(this)}\n        onKeyDown={this.handleSubmit.bind(this)}\n      />\n    );\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      name: this.props.name || '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ name: e.target.value });\n  }\n\n  handleSubmit(e) {\n    const name = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.addPlayer(name);\n      this.setState({ name: '' });\n    }\n  }\n}\n\nAddPlayerInput.propTypes = {\n  addPlayer: PropTypes.func.isRequired,\n};\n\nexport default AddPlayerInput;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './PlayerListItem.css';\n\nclass PlayerListItem extends Component {\n  render() {\n    return (\n      <li className={styles.playerListItem}>\n        <div className={styles.playerInfos}>\n          <div>\n            <span>{this.props.name}</span>\n          </div>\n          <div>\n            <small>\n              {this.props.team} Â· {this.props.position}\n            </small>\n          </div>\n        </div>\n        <div className={styles.playerActions}>\n          <button\n            className={`btn btn-default ${styles.btnAction}`}\n            onClick={() => this.props.starPlayer(this.props.id)}\n          >\n            <i\n              className={classnames('fa', {\n                'fa-star': this.props.starred,\n                'fa-star-o': !this.props.starred,\n              })}\n            />\n          </button>\n          <button\n            className={`btn btn-default ${styles.btnAction}`}\n            onClick={() => this.props.deletePlayer(this.props.id)}\n          >\n            <i className=\"fa fa-trash\" />\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nPlayerListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  team: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  starred: PropTypes.bool,\n  starPlayer: PropTypes.func.isRequired,\n};\n\nexport default PlayerListItem;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./PlayerList.css\";\nimport PlayerListItem from \"./PlayerListItem\";\nimport { Pagination } from \"antd\";\nimport { connect } from \"react-redux\";\n\nconst PlayerList = props => {\n  const { players, visible } = props;\n  const [current, setCurrent] = useState(1);\n  const [data, setData] = useState([]);\n  const total = players.length;\n\n  useEffect(() => {\n    console.log(players, current);\n    setData(players.slice((current - 1) * 5, current * 5));\n  }, [players, current]);\n\n  useEffect(() => {\n    setCurrent(1);\n  }, [visible]);\n\n  const onChange = value => {\n    setCurrent(value);\n  };\n  return (\n    <>\n      <ul className={styles.playerList}>\n        {data.map((player, index) => {\n          return (\n            <PlayerListItem\n              key={index}\n              id={index}\n              name={player.name}\n              team={player.team}\n              position={player.position}\n              starred={player.starred}\n              {...props.actions}\n            />\n          );\n        })}\n      </ul>\n      <Pagination\n        showQuickJumper\n        defaultCurrent={1}\n        current={current}\n        pageSize={5}\n        total={total}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nPlayerList.propTypes = {\n  players: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => {\n  return {\n    visible: state.playerlist.visible\n  };\n};\nexport default connect(mapStateToProp)(PlayerList);\n","import React, { Component } from \"react\";\nimport styles from \"./PlayerListApp.css\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"antd\";\n\nimport {\n  addPlayer,\n  deletePlayer,\n  starPlayer,\n  handleShow\n} from \"../actions/PlayersActions\";\nimport { PlayerList, AddPlayerInput } from \"../components\";\n\nconst getCurrentList = (todos, filter) => {\n  console.log(todos,filter)\n  switch (filter) {\n    case \"SF\":\n      return todos.filter(t => t.position === \"SF\");\n    case \"PG\":\n      return todos.filter(t => t.position === \"PG\");\n    case \"ALL\":\n      return todos;\n    default:\n  }\n};\n\nclass PlayerListApp extends Component {\n  render() {\n    console.log(this.props)\n    const { playerlist = [], handleShow } = this.props;\n\n    const actions = {\n      addPlayer: this.props.addPlayer,\n      deletePlayer: this.props.deletePlayer,\n      starPlayer: this.props.starPlayer\n    };\n\n    return (\n      <div className={styles.playerListApp}>\n        <h1>NBA Players</h1>\n        <AddPlayerInput addPlayer={actions.addPlayer} />\n        <Button\n          onClick={() => {\n            handleShow(\"SF\");\n          }}\n        >\n          \"show SF\"\n        </Button>\n        <Button\n          onClick={() => {\n            handleShow(\"PG\");\n          }}\n        >\n          \"show PG\"\n        </Button>\n        <Button\n          onClick={() => {\n            handleShow(\"ALL\");\n          }}\n        >\n          \"show ALL\"\n        </Button>\n        <PlayerList players={playerlist} actions={actions} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    playerlist: getCurrentList(state.playerlist.playersById, state.playerlist.visible)\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPlayer: id => {\n      dispatch(addPlayer(id));\n    },\n    deletePlayer: id => {\n      dispatch(deletePlayer(id));\n    },\n    starPlayer: id => {\n      dispatch(starPlayer(id));\n    },\n    handleShow: id => {\n      dispatch(handleShow(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerListApp);\n","import * as types from '../constants/ActionTypes';\n\nexport function addPlayer(name) {\n  return {\n    type: types.ADD_PLAYER,\n    name,\n  };\n}\n\nexport function deletePlayer(id) {\n  return {\n    type: types.DELETE_PLAYER,\n    id,\n  };\n}\n\nexport function starPlayer(id) {\n  return {\n    type: types.STAR_PLAYER,\n    id,\n  };\n}\n\nexport function handleShow(id) {\n  console.log(id)\n  return {\n    type : types.HANDLE_SHOW,\n    id\n  }\n}","export const ADD_PLAYER = \"ADD_PLAYER\";\nexport const STAR_PLAYER = \"STAR_PLAYER\";\nexport const DELETE_PLAYER = \"DELETE_PLAYER\";\nexport const HANDLE_SHOW = \"HANDLE_SHOW\";\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  playersById: [\n    {\n      name: \"LeBron James\",\n      team: \"LOS ANGELES LAKERS\",\n      position: \"SF\",\n      starred: true\n    },\n    {\n      name: \"Kevin Duran\",\n      team: \"GOLDEN STATE WARRIORS\",\n      position: \"SF\",\n      starred: false\n    },\n    {\n      name: \"Anthony Davis\",\n      team: \"NEW ORLEANS PELICANS\",\n      position: \"PF\",\n      starred: false\n    },\n    {\n      name: \"Stephen Curry\",\n      team: \"GOLDEN STATE WARRIORS\",\n      position: \"PG\",\n      starred: false\n    },\n    {\n      name: \"James Harden\",\n      team: \"HOUSTON ROCKETS\",\n      position: \"SG\",\n      starred: false\n    },\n    {\n      name: \"Kawhi Leonard\",\n      team: \"TORONTO RAPTORS\",\n      position: \"SF\",\n      starred: false\n    },\n    {\n      name: \"Kawhi Leonard2\",\n      team: \"TORONTO RAPTORS\",\n      position: \"SF\",\n      starred: false\n    },\n    {\n      name: \"Kawhi Leonard3\",\n      team: \"TORONTO RAPTORS\",\n      position: \"SF\",\n      starred: false\n    },\n    {\n      name: \"Kawhi Leonard4\",\n      team: \"TORONTO RAPTORS\",\n      position: \"SF\",\n      starred: false\n    },\n    {\n      name: \"Kawhi Leonard5\",\n      team: \"TORONTO RAPTORS\",\n      position: \"SF\",\n      starred: false\n    },\n    {\n      name: \"Kawhi Leonard66\",\n      team: \"TORONTO RAPTORS\",\n      position: \"SF\",\n      starred: false\n    }\n  ],\n  visible: \"ALL\"\n};\n\nexport default function players(state = initialState, action) {\n  switch (action.type) {\n    case types.ADD_PLAYER:\n      return {\n        ...state,\n        playersById: [\n          ...state.playersById,\n          {\n            name: action.name,\n            team: \"LOS ANGELES LAKERS\",\n            position: \"SF\"\n          }\n        ]\n      };\n    case types.DELETE_PLAYER:\n      return {\n        ...state,\n        playersById: state.playersById.filter(\n          (item, index) => index !== action.id\n        )\n      };\n    case types.STAR_PLAYER:\n      let players = [...state.playersById];\n      let player = players.find((item, index) => index === action.id);\n      player.starred = !player.starred;\n      return {\n        ...state,\n        playersById: players\n      };\n    case types.HANDLE_SHOW:\n      return {\n        ...state,\n        visible: action.id\n      };\n    default:\n      return state;\n  }\n}\n","import React, { Component } from 'react';\nimport { combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport PlayerListApp from './PlayerListApp';\nimport * as reducers from '../reducers';\n\nconst reducer = combineReducers(reducers);\nconst store = createStore(reducer);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Provider store={store}>\n          <PlayerListApp />\n        </Provider>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}